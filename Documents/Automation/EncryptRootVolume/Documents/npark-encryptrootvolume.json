{
  "schemaVersion": "0.3",
  "description": "Encrypt Root Volume Automation Document",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "InstanceId": {
      "description": "(Required) Instance ID of the ec2 instance whose root volume needs to be encrypted",
      "type": "String"
    },
    "KmsKeyId": {
      "description": "(Required) Customer KMS key to use during the encryption",
      "type": "String"
    },
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
      "default": ""
    }
  },
  "mainSteps": [
    {
      "maxAttempts": 1,
      "inputs": {
        "Service": "ec2",
        "Api": "DescribeInstances",
        "InstanceIds": [
          "{{InstanceId}}"
        ]
      },
      "outputs": [
        {
          "Name": "AvailabilityZone",
          "Selector": "$.Reservations[0].Instances[0].Placement.AvailabilityZone",
          "Type": "String"
        },
        {
          "Name": "RootDeviceName",
          "Selector": "$.Reservations[0].Instances[0].RootDeviceName",
          "Type": "String"
        }
      ],
      "name": "describeInstance",
      "action": "aws:executeAwsApi",
      "timeoutSeconds": 30,
      "onFailure": "Abort"
    },

    {
       "name": "describeInstanceRootVolume",
       "action": "aws:executeAwsApi",
       "onFailure": "Abort",
       "timeoutSeconds": 60,
       "maxAttempts": 10,
       "inputs": {
         "Service": "ec2",
         "Api": "DescribeVolumes",
         "Filters": [
           {
              "Name": "attachment.instance-id",
              "Values": [
                "{{ InstanceId }}"
              ]
           },
           {
              "Name": "attachment.device",
              "Values": [
                "{{ describeInstance.RootDeviceName }}"
              ]
           }
         ]
       },
       "outputs": [
         {
            "Name": "RootDeviceVolumeId",
            "Selector": "$.Volumes[0].Attachments[0].VolumeId",
            "Type": "String"
         },
         {
            "Name": "RootDeviceDeleteOnTermination",
            "Selector": "$.Volumes[0].Attachments[0].DeleteOnTermination",
            "Type": "Boolean"
         }
       ],
       "isCritical": true
    },

    {
      "maxAttempts": 3,
      "inputs": {
        "DocumentName": "AWS-CreateSnapshot",
        "RuntimeParameters": {
          "VolumeId": "{{describeInstanceRootVolume.RootDeviceVolumeId}}"
        }
      },
      "name": "CreateSnapshot",
      "action": "aws:executeAutomation",
      "timeoutSeconds": 3600,
      "onFailure": "Abort"
    },
    {
      "maxAttempts": 1,
      "inputs": {
        "Service": "ec2",
        "Api": "DescribeSnapshots",
        "SnapshotIds": "{{CreateSnapshot.Output}}"
      },
      "outputs": [
        {
          "Name": "SNAPSHOTID",
          "Selector": "$.Snapshots[0].SnapshotId",
          "Type": "String"
        }
      ],
      "name": "extractSnapshotID",
      "action": "aws:executeAwsApi",
      "timeoutSeconds": 30,
      "onFailure": "Abort"
    },
    {
      "maxAttempts": 1,
      "inputs": {
        "Service": "ec2",
        "Api": "CopySnapshot",
        "SourceSnapshotId": "{{extractSnapshotID.SNAPSHOTID}}",
        "SourceRegion": "{{global:REGION}}",
        "Encrypted": true,
        "KmsKeyId": "{{KmsKeyId}}",
        "DestinationRegion": "{{global:REGION}}"
      },
      "outputs": [
        {
          "Name": "EncryptedSnapshotID",
          "Selector": "$.SnapshotId",
          "Type": "String"
        }
      ],
      "name": "CopySnapshot",
      "action": "aws:executeAwsApi",
      "timeoutSeconds": 3600,
      "onFailure": "Abort"
    },
    {
      "inputs": {
        "Duration": "PT2M"
      },
      "name": "sleep1",
      "action": "aws:sleep"
    },
    {
      "maxAttempts": 1,
      "inputs": {
        "Service": "ec2",
        "Api": "CreateVolume",
        "AvailabilityZone": "{{describeInstance.AvailabilityZone}}",
        "Encrypted": true,
        "KmsKeyId": "{{KmsKeyId}}",
        "SnapshotId": "{{CopySnapshot.EncryptedSnapshotID}}",
        "VolumeType": "gp2"
      },
      "outputs": [
        {
          "Name": "NewRootVolumeID",
          "Selector": "$.VolumeId",
          "Type": "String"
        }
      ],
      "name": "CreateVolume",
      "action": "aws:executeAwsApi",
      "timeoutSeconds": 30,
      "onFailure": "Abort"
    },
    {
      "maxAttempts": 1,
      "inputs": {
        "DocumentName": "AWS-StopEC2Instance",
        "RuntimeParameters": {
          "InstanceId": "{{InstanceId}}"
        }
      },
      "name": "StopInstance",
      "action": "aws:executeAutomation",
      "timeoutSeconds": 300,
      "onFailure": "Abort"
    },
    {
      "maxAttempts": 1,
      "inputs": {
        "DocumentName": "AWS-DetachEBSVolume",
        "RuntimeParameters": {
          "VolumeId": "{{describeInstanceRootVolume.RootDeviceVolumeId}}"
        }
      },
      "name": "DetachEBSVolume",
      "action": "aws:executeAutomation",
      "timeoutSeconds": 300,
      "onFailure": "Abort"
    },
    {
      "maxAttempts": 1,
      "inputs": {
        "DocumentName": "AWS-AttachEBSVolume",
        "RuntimeParameters": {
          "Device": "{{describeInstance.RootDeviceName}}",
          "InstanceId": "{{InstanceId}}",
          "VolumeId": "{{CreateVolume.NewRootVolumeID}}"
        }
      },
      "name": "AttachNewEBSVolume",
      "action": "aws:executeAutomation",
      "timeoutSeconds": 180,
      "onFailure": "Abort"
    },
    {
       "name": "ApplyDeleteOnTerminationValue",
       "action": "aws:executeAwsApi",
       "onFailure": "Abort",
       "timeoutSeconds": 60,
       "maxAttempts": 10,
       "inputs": {
         "Service": "ec2",
         "Api": "ModifyInstanceAttribute",
         "InstanceId": "{{InstanceId}}",
         "BlockDeviceMappings": [
           {
             "DeviceName": "{{describeInstance.RootDeviceName}}",
             "Ebs": {
               "DeleteOnTermination": "{{describeInstanceRootVolume.RootDeviceDeleteOnTermination}}"
             }
           }
         ]
       },
       "isCritical": true
    },
    {
      "maxAttempts": 1,
      "inputs": {
        "DocumentName": "AWS-StartEC2Instance",
        "RuntimeParameters": {
          "InstanceId": "{{InstanceId}}"
        }
      },
      "name": "StartInstance",
      "action": "aws:executeAutomation",
      "timeoutSeconds": 300,
      "onFailure": "Abort"
    }
  ]
}

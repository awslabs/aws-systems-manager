#
# Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
AWSTemplateFormatVersion: '2010-09-09'
Description: Automation Stack for Start RDS Instance
Parameters:
  LambdaRoleArn:
    Description: >
      The ARN of the role that allows Lambda created by Automation to perform the action on your behalf
    Type: String
    Default: ""
  LambdaName:
    Description: >
      The lambda function name
    Type: String
  WaitLambdaName:
    Description: >
      Wait lambda function name
    Type: String
Conditions:
  LambdaAssumeRoleNotSpecified:
    !Or
      - !Equals [!Ref LambdaRoleArn, '']
      - !Equals [!Ref LambdaRoleArn, 'undefined']
Resources:
  # Assume role used by the lambda function (only created if not passed in)
  LambdaRole:
    Type: AWS::IAM::Role
    Condition: LambdaAssumeRoleNotSpecified
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: "Allow"
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: StartRdsInstanceLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              Action:
                - rds:StartDbInstance
                - rds:DescribeDBInstances
              Effect: Allow
              Resource: "*"
      Path: "/"
  StartRdsInstanceLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "{}"
      FunctionName: !Ref LambdaName
      Role: !If ["LambdaAssumeRoleNotSpecified", !GetAtt LambdaRole.Arn, !Ref LambdaRoleArn]
      Timeout: 60
      Handler: "index.handler"
      Runtime: python2.7
      MemorySize: 128
  WaitRdsInstanceLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "{}"
      FunctionName: !Ref WaitLambdaName
      Role: !If ["LambdaAssumeRoleNotSpecified", !GetAtt LambdaRole.Arn, !Ref LambdaRoleArn]
      Timeout: 300
      Handler: "index.handler"
      Runtime: python2.7
      MemorySize: 128